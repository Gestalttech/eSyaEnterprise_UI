
@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@using Microsoft.AspNetCore.Builder
@using Microsoft.AspNetCore.Localization
@using Microsoft.Extensions.Options
@using Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@inject IOptions<RequestLocalizationOptions> LocOptions
@model LoginViewModel
@{
    Layout = null;
}
@using System.Globalization
@using eSyaEnterprise_UI.Models
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <meta name="google" content="notranslate">
    <meta name="description" content="eSya Enterprise" />
    <title>Login</title>
    <link rel="icon" type="image/x-icon" href="~/images/favicon.ico">
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery/dist/popper.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.min.js"></script>
    <script src="~/js/common/material.min.js"></script>
    <script src="~/js/common/all.min.js"></script>
    <script src="~/js/common/bootstrap-select.js"></script>
    <script src="~/js/jquery.inputmask/inputmask.js"></script>
    <script src="~/js/jquery.inputmask/jquery.inputmask.min.js"></script>
    <script src="~/js/jquery.inputmask/bindings/inputmask.binding.js"></script>
    <script src="~/js/Common/toast.js"></script>
    <script src="~/js/Common/toastr.js"></script>
    <script src="~/js/Common/eSyaMessageNotification.js"></script>
    <link href="~/lib/bootstrap/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/css/common/animate.css" rel="stylesheet" />
    <link href="~/css/common/all.min.css" rel="stylesheet" />
    <link href="~/css/common/bootstrap-select.css" rel="stylesheet" />
    <link href="~/css/common/material.min.css" rel="stylesheet" />
    <link asp-append-version="true" rel="stylesheet" href="~/css/login/login.css" />
    <link asp-append-version="true" rel="stylesheet" href="~/css/login/eSyaOTP.css" />
    <link asp-append-version="true" rel="stylesheet" href="~/css/common/esyafonts.css" />
    <link asp-append-version="true" rel="stylesheet" href="~/css/common/esyatheme.css" />
</head>
<body>
    <div class="languageDiv form-group">
        <i class="fa fa-globe"></i>
        @await Html.PartialAsync("_SelectLanguage")
    </div>
    <div class="loginContainer">
        <div class="row">
            <div class="col-lg-12 text-center">
                <img src="~/images/logo/esya-logo-black.png" class="smallDeviceLogo" alt="eSya Logo" />
            </div>
            <div class="col-lg-6 col-md-6 col-sm-6 col-xs-12 d-sm-none d-md-block padright0 animated fadeIn">
                <img src="~/images/esya-products-yellow-with-footer.jpg" class="leftImage" alt="eSya Products" />
            </div>
            <div class="col-lg-6 col-md-6 col-sm-auto col-sm-12 col-xs-12 login-form">
                <div class="row h-100 position-relative section-form">
                    <div class="col-lg-12 col-md-12 col-sm-12 pad0 h-100 mb-0">
                        <div class="mdl-layout mdl-js-layout mdl-layout--fixed-header mdl-layout--fixed-tabs h-100">
                            <header class="mdl-layout__header">
                                <div class="mdl-layout__tab-bar mdl-js-ripple-effect">
                                    <a href="#scroll-tab-1" class="mdl-layout__tab is-active" onclick="fnHideMobileDiv()">
                                        <i class="fas fa-key f-18"></i> @Localizer["LoginWithUserID"]
                                    </a>
                                    @if (ViewBag.IsHideMobileLogin != null)
                                    {
                                        <a href="#scroll-tab-2" class="mdl-layout__tab" id="LoginWithMobile" onclick="fnShowMobileDiv()">
                                            <i class="fas fa-mobile-alt f-18"></i> @Localizer["LoginwithMobileNumber"]
                                        </a>
                                    }
                                </div>
                            </header>

                            <main class="mdl-layout__content h-100">
                                <section class="mdl-layout__tab-panel is-active" id="scroll-tab-1">
                                    <div class="page-content">
                                        <!-- Your content goes here -->
                                        <form id="LoginWithForPassword" method="post" asp-controller="Account" asp-action="Index"
                                              autocomplete="off" class="px-3 pb-3">
                                            @* <div asp-validation-summary="All" class="text-danger"></div>*@
                                            @if (ViewBag.InvaidUser != null)
                                            {
                                                <span class="text-danger" id="spnInvalidMessage"> @ViewBag.InvaidUser</span>
                                            }
                                            
                                            <div class="form-group animated fadeIn">
                                                <label class="">@Localizer["UserID"]</label>
                                                <input class="form-control" type="text" asp-for="@Model.UserName" autocomplete="off"  id="txtUserID" maxlength="40" tabindex="1" required>
                                            </div>
                                            @*  @if (ViewBag.IsGetUser)
                                            { *@
                                            <div class="animated fadeIn form-group">
                                                <a href="@Url.Action("GetUserId", "Account")" class="getUserId" tabindex="7">@Localizer["ForgotUserID"]</a>
                                            </div>
                                            @* } *@
                                            <div class="form-group animated fadeIn">
                                                <label>@Localizer["Password"]</label>
                                                <input class="form-control" type="password" asp-for="@Model.Password" id="txtLoginPassword" autocomplete="off" maxlength="50" tabindex="2" required>
                                                <span asp-validation-for="Password" class="text-danger"></span>
                                            </div>
                                            @*  @if (ViewBag.IsGetPassword)
                                            { *@
                                            <div class=" animated fadeIn form-group">
                                                <a href="@Url.Action("GetPassword", "Account")" class="getUserId" tabindex="8">@Localizer["ForgotPassword"]</a>
                                            </div>
                                            @*  } *@
                                            <div>
                                                <div class="animated fadeIn">
                                                    <button id="btnUserSignIn" type="submit" class="mdl-button loginButton  f-right" tabindex="3">
                                                        @Localizer["Signin"]  <i class="fas fa-chevron-right"></i>
                                                    </button>
                                                </div>
                                            </div>
                                        </form>
                                    </div>
                                </section>
                                @if (ViewBag.IsHideMobileLogin != null)
                                {
                                    <section class="mdl-layout__tab-panel" id="scroll-tab-2">
                                        <div class="page-content">
                                            <div id="dvMobileLoginUnavailable"></div>
                                            <!-- Your content goes here -->
                                            <form id="LoginWithForMobile" method="post" asp-controller="Account" asp-action="MobileLogin"
                                                  style="padding:16px 15px 15px">
                                                <div class="text-danger validation-summary-errors" data-valmsg-summary="true">
                                                    <div id="dvOTPError"></div>
                                                </div>
                                                <div class="form-group animated fadeIn hide" id="divMobileNumber">
                                                    <label class="lable-color">@Localizer["MobileNumber"]</label>

                                                    @await Component.InvokeAsync("IsdMobileInput", new { id = "UserMobile" })

                                                    <input id="txtPhoneNumber" type="text" asp-for="@Model.PhoneNumber" autocomplete="off" hidden />

                                                    <p class="OTPStatement">@Localizer["lblOTPStatement"]</p>
                                                    <div>
                                                        <div class="animated fadeIn">
                                                            <button type="button" id="btnSendOTP" onclick="fnSendLoginOTP()" class="mdl-button loginButton f-right" tabindex="3"> @Localizer["Authenticate"]  <i class="fas fa-chevron-right"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group animated fadeIn" id="divOTP" style="display:none">
                                                    <div class="form-group">
                                                        <p class="OTPStatement">@Localizer["OTPGeneratedStatement"]</p>
                                                    </div>
                                                    <label class="lable-color" style="">@Localizer["OTP"]</label>
                                                    <div id="divOuter">
                                                        <div id="divInner">
                                                            <input id="txtOTP" type="text" asp-for="@Model.OTP" autocomplete="off" autoCompleteType="disable" maxlength="6" />
                                                        </div>
                                                    </div>
                                                    <span id="timer" class="text-left"></span>
                                                    <a href="#" class="resendotp text-right" onclick="fnSendLoginOTP()">@Localizer["ResendOTP"]</a>
                                                    <div class="row padtop20 m-0">
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6 p-0">
                                                            <button type="button" class="mdl-button loginButton" tabindex="3" id="btnBackToMobileNo"><i class="fa fa-chevron-left c-grey"></i> Back</button>
                                                        </div>
                                                        <div class="col-lg-6 col-md-6 col-sm-6 col-6 p-0">
                                                            <button type="submit" id="btnAuthenticateOTP" onclick="fnSwitchDiv()" class="mdl-button loginButton f-right" tabindex="3"> @Localizer["SignIn"] <i class="fas fa-chevron-right"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </section>
                                }
                            </main>

                        </div>

                    </div>

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <p class="footer">
                            <span class="lblPowered">@Localizer["PoweredBy"]</span>
                            <span class="lblLicensed">@Localizer["LicensedTo"]</span>
                        </p>
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="modal fullscreen fade in" id="PopupChangePassword" data-bs-keyboard="false" data-bs-backdrop="static">
        <div class="modal-dialog modal-md" role="document" style="box-shadow:none;top:80px">
            <div class="modal-content ">
                <div class="modal-header popupHeader">
                    <button type="button" class="close ml-auto" data-bs-dismiss="modal"> <i class="fa fa-times"></i> </button>
                    <h4 class="modal-title m-0"><i class="fa fa-key"></i>  @Localizer["CreatePassword"]</h4>
               </div>

                <div class="modal-body">
                    <div class="row resetPasswordSection">
                        <div class="col-sm-12">
                            <div class="form-group fixedText border-bottom">
                                <label for="" id="lblLogInID" class="d-inline font-weight-bold h6"> </label>
                            </div>
                            <div>
                               
                                <input type="text"  id="txtloginUserId" hidden/> 
                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="txtpassword">@Localizer["NewPassword"]</label>
                                <input id="txtpassword" class="form-control" maxlength="50" type="password" />

                            </div>
                        </div>
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="txtConfirmPassword">@Localizer["ConfirmPassword"]</label>
                                <input id="txtConfirmPassword" class="form-control" maxlength="50" type="password" />
                            </div>
                        </div>

                        <div class="col-12 col-lg-12 bgUserTips">
                            <p class="small m-0">Your password must be</p>
                            <ul class="small text-sm">
                                <li>Minimum 8 character,</li>
                                <li>Minimum 1 uppercase character/lowercase character required,[A-Z][a-z]</li>
                                <li> Minimum 1 special symbol required,[@@#$%!&*'']</li>
                                <li>Minimum 1 digit required.[0-9]</li>
                            </ul>
                            
                            
                           
                            
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <div class="row">
                        <div class="col-lg-12 text-center">
                            <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnSaveChangePassword" onclick="fnSaveChangePassword();">
                                <i class="fa fa-save"></i> @Localizer[" Save "]
                            </button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="modal fullscreen fade in" id="PopupOTP" data-bs-keyboard="false" data-bs-backdrop="static">
        <div class="modal-dialog modal-md" role="document" style="box-shadow:none;top:80px">
            <div class="modal-content ">
                <div class="modal-header popupHeader">
                    <button type="button" class="close ml-auto" data-bs-dismiss="modal"> <i class="fa fa-times"></i> </button>
                    <h4 class="modal-title m-0"><i class="fa fa-key"></i>  @Localizer["OTP"]</h4>
                </div>

                <div class="modal-body">
                    <div class="row innerSection">
                        <div class="col-lg-12 col-md-12 col-sm-12">
                            <label>@Localizer["EnterYourOTP"]</label>

                          
                            <div class="otp-form">
                                <input class="otp-field" type="text" autocomplete="off" name="opt-field[]" maxlength=1>
                                <input class="otp-field" type="text" autocomplete="off" name="opt-field[]" maxlength=1>
                                <input class="otp-field" type="text" autocomplete="off" name="opt-field[]" maxlength=1>
                                <input class="otp-field" type="text" autocomplete="off" name="opt-field[]" maxlength=1>
                                <input class="otp-field" type="text" autocomplete="off" name="opt-field[]" maxlength=1>
                                <input class="otp-field" type="text" autocomplete="off" name="opt-field[]" maxlength=1>

                                <!-- Store OTP Value -->
                                <input class="otp-value" type="hidden" name="opt-value">
                               
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer justify-content-center">
                    <div class="row">
                        <div class="col-lg-12 text-center">
                            <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button me-2" id="btnCheckOTP" onclick="fnValidateUserOTP();">
                                <i class="fa fa-save"></i> @Localizer["ValidateOTP"]
                            </button>
                            <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent cancel-button" data-bs-dismiss="modal">
                                <i class="fa fa-times"></i> @Localizer["Cancel"]
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>


    <style>
        .errorMessages {
            display: none;
            list-style-type: disc;
            margin: 0 10px 15px 10px;
            padding: 8px 35px 8px 30px;
            color: #B94A48;
            background-color: #F2DEDE;
            border: 2px solid #EED3D7;
            border-radius: 4px;
            text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
        }

            .errorMessages span {
                font-weight: bold;
            }
    </style>
    <script>

        var _IsMobileLogin = '@ViewBag.IsMobileLogin';
        var _cnfISDCode = @Configuration.GetSection("cnf").GetSection("ISDCode").Value;



        $(document).ready(function () {
            
            $('#LoginWithForMobile').submit(function () {
                if ($('#txtOTP').val() == "") {
                    $("#dvOTPError").html("<ul><li>please enter OTP</li></ul>");
                    alert(1, 'warning', '0100', 'warning')
                    return false;
                }
                return fnValidateOTP();
            });
            $("#btnBackToMobileNo").click(function () {
                $('#divOTP').css('display', 'none');
                $('#divMobileNumber').css('display', 'block');
            });
            fnSetTheProductImage();

        });

        $(window).on('resize', function () {
            fnSetTheProductImage();
        });


        function getBaseURL() {
            var url = window.location.href.split('/');
            var baseUrl = url[0] + '//' + url[2] + '@Url.Content("~")';
            return baseUrl;
        }

        function fnSwitchDiv() {
            $("#divMobileNumber").hide(500);
            $("#divOTP").show(500);
            var waitMinutes = 60 * 5;
            startTimer(waitMinutes, timerElem);
        }
        // Tab device
        function fnSetTheProductImage() {
            if ($(window).width() > 767 && $(window).width() < 992) {
                $(".login-form").css('height', $(".leftImage").innerHeight());
            }
            else {
                $(".login-form").css('height', '433px');
            }
        }
        var timeLeft = 60;
        var timerElem = document.getElementById('timer');
        var myTimer;
        function startTimer(duration, display) {

            if (myTimer !== null)
                clearInterval(myTimer);

            var start = Date.now(),
                diff,
                minutes,
                seconds;
            function timer() {
                // get the number of seconds that have elapsed since
                // startTimer() was called
                diff = duration - (((Date.now() - start) / 1000) | 0);

                // does the same job as parseInt truncates the float
                minutes = (diff / 60) | 0;
                seconds = (diff % 60) | 0;

                minutes = minutes < 10 ? "0" + minutes : minutes;
                seconds = seconds < 10 ? "0" + seconds : seconds;

                display.textContent = minutes + ":" + seconds;

                if (diff <= 0) {
                    clearInterval(myTimer);
                    $('#btnAuthenticateOTP').prop('disabled', true);
                    return;
                }
            };
            timer();
            myTimer = setInterval(timer, 1000);
        }

        function fnSendLoginOTP() {
            $.ajax({
                url: getBaseURL() + '/Account/SendLoginOTP?mobileNumber=' + $("#txtUserMobile").val(),
                type: 'POST',
                datatype: 'json',
                contentType: 'application/json; charset=utf-8',
                success: function (result) {

                    $("#dvOTPError").html("");
                    if (result.Status) {
                        $("#txtPhoneNumber").val($("#txtUserMobile").val());
                        $("#divMobileNumber").hide(500);
                        $("#divOTP").show(500);
                        $('#txtOTP').val("");
                        $('#btnAuthenticateOTP').prop('disabled', false);
                        var waitMinutes = 60 * 5;
                        startTimer(waitMinutes, timerElem);
                        $('#divOTP').css('display', 'block');
                        $('#divMobileNumber').css('display', 'none');
                    }
                    else {
                        document.getElementById("txtUserMobile").style.color = "red"
                        if (result.StatusCode === "404") {
                            $("#dvOTPError").html("<ul><li>Mobile Number does not exists in user credentials</li></ul>");
                        }
                        if (result.StatusCode === "100") {
                            $("#dvOTPError").html("<ul><li>Mobile Number does not have Login with Mobile option</li></ul>");
                        }
                        if (result.StatusCode === "500") {
                            $("#dvOTPError").html("<ul><li>Internal Error</li></ul>");
                        }
                    }
                },
                error: function (error) {
                    $("#dvOTPError").html("<ul><li>Internal Error</li></ul>");
                }
            });

        }

        function fnValidateOTP() {
            $("#dvOTPError").html("");
            var Status = false;
            $.ajax({
                url: getBaseURL() + '/Account/ValidateOTP',
                type: 'POST',
                datatype: 'json',
                data: { mobileNumber: $("#txtUserMobile").val(), OTP: $("#txtOTP").val() },
                async: false,
                success: function (result) {
                    if (result.Status === false) {
                        $("#dvOTPError").html("<ul><li>" + result.Message + "</li></ul>");
                    }
                    Status = result.Status;
                },
                error: function (error) {
                    $("#dvOTPError").html("<ul><li>Internal Error</li></ul>");
                    Status = false;
                }
            });
            return Status;
        }

        function fnShowMobileDiv() {

            if (_IsMobileLogin === 'False') {
                $("#dvMobileLoginUnavailable").html("<ul><li style='color:red;padding-top:20px'>@Localizer["MobileLoginOptionIsNotAvailed"]</li></ul>");
                return;
            }

            $("#divMobileNumber").removeClass('hide');
        }

        function fnHideMobileDiv() {
            $("#divMobileNumber").addClass('hide');
            $("#txtUserMobile").val('');
        }
        //change password popup open functionality

       
        $("#txtUserID").on('focusout', function () {
            fncheckPasswordWithLoginID()
        });
        $("#txtLoginPassword").on('focusin', function () {
            fncheckPasswordWithLoginID()
        });
        
        function fncheckPasswordWithLoginID() {

            var logInId = $("#txtUserID").val();

            // $("#lblLogInID").text(logInId);
            if (logInId == null || logInId == "")
            {
                return;
            }
            if (logInId !== null || logInId !== "") {
                logInId = logInId.trim();
            }
            $.ajax({
                url: getBaseURL() + '/Account/ChkIsCreatePasswordInNextSignIn?loginId=' + logInId,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    fnAlert("e", "", "", xhr.statusText);
                },
                success: function (response) {
                    if (response.StatusCode === "1") {
                        // $("#lblLogInID").text("Welcome "+response.Key);
                        $("#txtloginUserId").val(response.ID);
                        $("#PopupOTP").modal('show');

                    }
                    else {
                        // $("#lblLogInID").text("");
                        // $("#txtloginUserId").val("");
                        $("#PopupOTP").modal('hide');

                    }
                },
                //async: false,
                //processData: false
            });


        }
        function fnValidateUserOTP() {
           

            var otpval = $("[name='opt-value']").val();

            if ($("#txtloginUserId").val() == null || $("#txtloginUserId").val() == "") {
                return;
            } 
            if (otpval == null || otpval == "") {
                return;
            }
           
            $.ajax({
                url: getBaseURL() + '/Account/ValidateCreateUserOTP?userId=' + $("#txtloginUserId").val() + '&otp=' + otpval,
                type: 'GET',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                error: function (xhr) {
                    fnAlert("e", "", "", xhr.statusText);
                },
                success: function (response) {
                   
                    if (response.IsSucceeded==true) {
                        $("#lblLogInID").text('');
                        $("#txtloginUserId").val('');
                        $("#PopupOTP").modal('hide');
                        fnAlert("s", "", "", response.Message);
                        $("#lblLogInID").text("Welcome "+response.LoginDesc);
                        $("#txtloginUserId").val(response.UserID);
                       
                        setTimeout(function () {
                            $("#PopupChangePassword").modal('show');
                        }, 2000);
                    }
                    else {
                        $("#lblLogInID").text("");
                        $("#txtloginUserId").val(response.UserID);
                        fnAlert("w","","",response.Message);
                    }
                },
                //async: false,
                //processData: false
            });


        }
        function fnSaveChangePassword() {

            var PasswordPattern = new RegExp("((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@@#$%!&*]).{8,20})");

            if ($("#txtpassword").val().trim().length <= 0) {
                fnAlert("w","","","Please Enter New Password");
                return;
            }
            if (!PasswordPattern.test($("#txtpassword").val())) {
                fnAlert("w", "", "", "Password Should Contains : Minimum 8 character, Minimum 1 uppercase character/lowercase character required, Minimum 1 special symbol(@@#$%!&*) required, Minimum 1 digit required.");
                return;
            }
            if ($("#txtConfirmPassword").val().trim().length <= 0) {
                fnAlert("w", "", "", "Please Enter New Confirm Password");
                return;
            }

            if ($("#txtpassword").val() !== $("#txtConfirmPassword").val()) {
                fnAlert("w", "", "", "Password and Confirm Password should be same");
                return;
            }

            $("#btnSaveChangePassword").attr("disabled", true);
            $.ajax({
                url: getBaseURL() + '/Account/CreateUserPasswordINNextSignIn?userId=' + $("#txtloginUserId").val() + '&password=' + $("#txtpassword").val() + '&confirmPassword=' + $("#txtConfirmPassword").val(),
                type: 'POST',
                dataType: 'json',
                contentType: 'application/json; charset=utf-8',
                async: false,
                success: function (response) {

                    if (response.Status) {
                        fnAlert("s", "", "", response.Message);
                        fnClearChangePasswordfromLogin();
                    }
                    else {
                        fnAlert("e", "", "", response.Message);
                    }
                    $("#btnSaveChangePassword").attr("disabled", false);
                },
                error: function (error) {
                    fnAlert("e", "", "", error.statusText);
                    $("#btnSaveChangePassword").attr("disabled", false);
                }
            });
        }

        function fnClearChangePasswordfromLogin() {
            $("#lblLogInID").text("");
            $("#txtloginUserId").val("");
            $("#txtpassword").val("");
            $("#txtConfirmPassword").val("");
            $("#btnSaveChangePassword").attr("disabled", false);
            $("#PopupChangePassword").modal('hide');
        }


        // otp scripts
      
        $("#PopupOTP").on('show.bs.modal',function(){
             $("#btnCheckOTP").attr('disabled', true);
            $(".otp-field").val('');
                    
            $(".otp-form *:input[type!=hidden]:first").focus();
            let otp_fields = $(".otp-form .otp-field"),
                    otp_value_field = $(".otp-form .otp-value");
                otp_fields
                    .on("input", function (e) {
                        $(this).val(
                            $(this)
                                .val()
                                .replace(/[^0-9]/g, "")
                        );
                        let opt_value = "";
                        otp_fields.each(function () {
                            let field_value = $(this).val();
                            if (field_value != "") opt_value += field_value;
                        });
                        otp_value_field.val(opt_value);
                        if (opt_value.length == 6){
                        $("#btnCheckOTP").attr('disabled', false);
                        }
                        else{
                        $("#btnCheckOTP").attr('disabled', true);
                        }
                    })
                    .on("keyup", function (e) {
                        let key = e.keyCode || e.charCode;
                        if (key == 8 || key == 46 || key == 37 || key == 40) {
                             $(this).prev().focus();
                           
                        } else if (key == 38 || key == 39 || $(this).val() != "") {
                            $(this).next().focus();
                           
                        }
                    })
                    .on("paste", function (e) {
                        let paste_data = e.originalEvent.clipboardData.getData("text");
                        let paste_data_splitted = paste_data.split("");
                        $.each(paste_data_splitted, function (index, value) {
                            otp_fields.eq(index).val(value);
                        });
                    });
        })
        
    </script>
</body>
</html>