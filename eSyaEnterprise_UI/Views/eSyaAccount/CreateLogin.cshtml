@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer

@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@{
    ViewData["Title"] = "User Creation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
  <script>
         var errorMsg = {
            LoginID_E1: '@Localizer["UI0094"]',
            LoginDesc_E2: '@Localizer["UI0095"]',
            Password_E3: '@Localizer["UI0096"]',
            UserGroup_E4: '@Localizer["UI0130"]',
            UserType_E5: '@Localizer["UI0131"]',
         }
  </script>
<section id="divUser">
    <div class="row padbot10">
        <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <table id="jqgUser"></table>
            <div id="jqpUser"></div>
        </div>
    </div>
</section>

<div class="modal fade in" id="PopupCreateUser" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-md  " role="document" style="box-shadow:none;">
        <div class="modal-content ">
            <div class="modal-header popupHeader">
                <button type="button" class="close ml-auto" data-dismiss="modal"> <i class="fa fa-times"></i></button>
                <h4 class="modal-title">Add User</h4>
            </div>

            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label>Login ID</label>
                            <input type="text" id="txtLoginID" name="LoginID" value="" class="form-control" maxlength="20" />
                        </div>
                    </div>
                    <div id="dvPassword" class="col-lg-6  col-md-6 col-sm-12 col-xs-12">
                        <div class="form-group">
                            <div>
                                <label>Password</label>
                                <input type="password" id="txtPassword" name="Password" value="" class="form-control" maxlength="2000" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row padbot4">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label> Login Description</label>
                            <input type="text" id="txtLoginDesc" name="LoginDescription" value="" class="form-control" maxlength="50" />
                        </div>
                    </div>

                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="form-group">
                            <label for="cboUserGroup" class=""> User Group</label>
                            <select class="selectpicker" data-live-search="true" id="cboUserGroup" title="" data-size="5" onchange="fnUserGroup_onchanged()">
                                <option value="0"> Choose User Group</option>
                                @foreach (var ug in ViewBag.l_UserGroup)
                                {
                                    <option value="@ug.ApplicationCode">@ug.CodeDesc</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-6 col-md-6 col-sm-6">
                        <div class="form-group">
                            <label for="cboUserType" class=""> User Type</label>
                            <select class="selectpicker" data-live-search="true" id="cboUserType" title="" data-size="8"></select>
                        </div>
                    </div>
                    <div class="col-lg-3  col-md-3 col-sm-12 col-xs-12">
                        <div class="default-checkbox checkbox-group">
                            <label class="mdl-checkbox mdl-js-checkbox mdl-js-ripple-effect" for="chkActiveStatus">
                                <input type="checkbox" id="chkActiveStatus" class="mdl-checkbox__input">
                                <span class="mdl-checkbox__label">Active</span>
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-button--accent primary-button" id="btnSave" onclick="fnSaveUserCreation();">
                            Save
                        </button>
                        <button class="mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect  cancel-button cancel-button" data-dismiss="modal" id="btnCancel"> Cancel </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>

    $(function () {
        fnLoadeSyaUserGrid();
     });

    function fnLoadeSyaUserGrid() {

        $("#jqgUser").GridUnload();

        $("#jqgUser").jqGrid({
            url: getBaseURL() + '/eSyaAccount/GeteSyaUserList',
            mtype: 'Get',
            datatype: 'json',
            ajaxGridOptions: { contentType: 'application/json; charset=utf-8' },
            jsonReader: { repeatitems: false, root: "rows", page: "page", total: "total", records: "records" },
            colNames: ["User ID", "Login ID", "Login Desc", "", "User Group", "", "User Type", "Active", "Action"],
            colModel: [
                { name: "UserID", width: 50, editable: false, editoptions: { disabled: true }, align: 'left', hidden: true },
                { name: "LoginID", width: 50, editable: true, align: 'left', edittype: 'text', hidden: false },
                { name: "LoginDesc", width: 170, editable: true, align: 'left' },
                { name: "UserGroup", width: 100, editable: true, align: 'left', hidden: true },
                { name: "UserGroupDesc", width: 100, editable: true, align: 'left' },
                { name: "UserType", width: 100, editable: true, align: 'left', hidden: true },
                { name: "UserTypeDesc", width: 100, editable: true, align: 'left' },
                { name: "ActiveStatus", editable: true, width: 40, align: 'center !important', edittype: "checkbox", formatter: 'checkbox', editoptions: { value: "true:false" } },
                {
                    name: 'edit', search: false, align: 'left', width: 54, sortable: false, resizable: false,
                    formatter: function (cellValue, options, rowdata, action) {
                        return '<button class="btn-xs ui-button ui-widget ui-corner-all btn-jqgrid" title="Edit" id="jqgEdit" onclick="return fnEditeSyaUser(event)"><i class="fas fa-pencil-alt"></i> Edit </button>'

                    }
                }
            ],
            pager: "#jqpUser",
            rowNum: 10,
            rowList: [10, 20, 50, 100],
            loadonce: true,
            viewrecords: true,
            gridview: true,
            rownumbers: true,
            height: 'auto',
            align: "left",
            width: 'auto',
            autowidth: true,
            shrinkToFit: true,
            scrollOffset: 0,
        }).jqGrid('navGrid', '#jqpUser', { add: false, edit: false, search: false, del: false, refresh: false }).jqGrid('navButtonAdd', '#jqpUser', {
            caption: '<span class="fa fa-sync"></span> Refresh', buttonicon: "none", id: "custRefresh", position: "first", onClickButton: fnGridRefresh
        }).jqGrid('navButtonAdd', '#jqpUser', {
            caption: '<span class="fa fa-plus" data-toggle="modal"></span> Add', buttonicon: 'none', id: 'jqgAdd', position: 'first', onClickButton: fnAddeSyaUser
        });
    }


    function fnAddeSyaUser() {

        $('#dvPassword').show();
        $('#PopupCreateUser').modal('show');
        $('#PopupCreateUser').find('.modal-title').text("Add eSya User");
        fnClearFields();
        _userID = 0;
        $("#btnSave").html('<i class="fa fa-save"></i> Save');
    }

    var _userID = 0;
    function fnEditeSyaUser(e) {

        var rowid = $(e.target).parents("tr.jqgrow").attr('id');
        var rowData = $('#jqgUser').jqGrid('getRowData', rowid);

        $('#dvPassword').hide();
        $('#PopupCreateUser').modal('show');
        $('#PopupCreateUser').find('.modal-title').text("Update eSya User");

        _userID = rowData.UserID;
        $('#txtLoginID').val(rowData.LoginID);
        $('#txtLoginDesc').val(rowData.LoginDesc);
        $('#txtPassword').val(rowData.Password);
        $('#cboUserGroup').val(rowData.UserGroup).selectpicker('refresh');
        fnUserGroup_onchanged();
        $('#cboUserType').val(rowData.UserType).selectpicker('refresh');
        if (rowData.ActiveStatus == 'true')
            $("#chkActiveStatus").parent().addClass("is-checked");
        else
            $("#chkActiveStatus").parent().removeClass("is-checked");

        $("#btnSave").html('Update');
    }

    function fnGridRefresh() {

    }

    function fnUserGroup_onchanged() {

        $("#cboUserType").empty().selectpicker('refresh');
        $.ajax({
            url: getBaseURL() + '/eSyaAccount/GetUserTypeListByGroup',
            data: { userGroup: $('#cboUserGroup').val() },
            async: false,
            success: function (result) {
                $("#cboUserType").append($("<option value='0'>Select</option>"));
                if (result != null) {
                    for (var i = 0; i < result.length; i++) {
                        $("#cboUserType").append($("<option></option>").val(result[i]["ApplicationCode"]).html(result[i]["CodeDesc"]));
                    }
                }
                $('#cboUserType').val($("#cboUserType option:first").val());
                $('#cboUserType').selectpicker('refresh');
            }
        });
    }

    function fnClearFields() {
        $('#txtLoginID').val("");
        $('#txtLoginDesc').val("");
        $('#txtPassword').val("");
        $('#cboUserGroup').val(0).selectpicker('refresh');
        $('#cboUserType').val(0).selectpicker('refresh');
        $("#chkActiveStatus").parent().addClass("is-checked");
    }

    function fnSaveUserCreation() {

        if (IsStringNullorEmpty($("#txtLoginID").val())) {
            fnAlert("w", "", "UI0094", errorMsg.LoginID_E1);
            return false;
        }
        if (IsStringNullorEmpty($("#txtLoginDesc").val())) {
            fnAlert("w", "", "UI0095", errorMsg.LoginDesc_E2);
            return false;
        }

        if (_userID <= 0) {
            if (IsStringNullorEmpty($("#txtPassword").val())) {
                fnAlert("w", "", "UI0096", errorMsg.Password_E3);
                return false;
            }
        }

        if (IsStringNullorEmpty($("#cboUserGroup").val())) {
            fnAlert("w", "", "UI0130", errorMsg.UserGroup_E4);
            return false;
        }
        if (IsStringNullorEmpty($("#cboUserType").val())) {
            fnAlert("w", "", "UI0130", errorMsg.UserType_E5);
            return false;
        }

        var obj = {
            UserID: _userID,
            LoginID: $("#txtLoginID").val(),
            LoginDesc: $("#txtLoginDesc").val(),
            Password: $("#txtPassword").val(),
            UserGroup: $("#cboUserGroup").val(),
            UserType: $("#cboUserType").val(),
            ActiveStatus: $("#chkActiveStatus").parent().hasClass("is-checked")
        };

        var url = getBaseURL() + '/eSyaAccount/InsertIntoeSyaUser';
        if (_userID > 0)
            url = getBaseURL() + '/eSyaAccount/UpdateeSyaUser';

        $("#btnSave").attr("disabled", true);
        $.ajax({
            url: url,
            type: 'POST',
            datatype: 'json',
            data: obj,
            async: false,
            success: function (response) {
                if (response.Status === true) {
                    $('#PopupCreateUser').modal('hide');
                    $("#jqgUser").setGridParam({ datatype: 'json', page: 1 }).trigger('reloadGrid');
                    fnAlert("s", "", response.StatusCode, response.Message);
                }
                else {
                    fnAlert("e", "", response.StatusCode, response.Message);
                }
                $("#btnSave").attr("disabled", false);
            },
            error: function (error) {
                fnAlert("e", "", response.StatusCode, response.Message);
                $("#btnSave").attr("disabled", false);
            }
        });
    }
</script>